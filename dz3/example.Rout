
R version 2.14.2 (2012-02-29)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-apple-darwin9.8.0/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Jackson network example
> # Created by NJG on Saturday, March 7, 2009
> #
> # Solve the Jackson network traffic eqns
> #---------------------------------------
> # Arrival rate into the network:
> arate<-0.50
> # Node service times:
> stime<-c(1.0,2.0,1.0)
> # Set up traffic eqns from network diagram:
> # L1 = 0.5 + 0.2 L3
> # L2 = 0.5 L1
> # L3 = 0.5 L1 + 0.8 L2
> # Rearrange the terms into matrix form:
> #  1.0 L1 + 0.0 L2 - 0.2 L3 = 0.5
> # -0.5 L1 + 1.0 L2 + 0.0 L3 = 0.0
> # -0.5 L1 - 0.8 L2 + 1.0 L3 = 0.0
> # All diagonal coeffs should be 1.0
> # Map the coeffs into R matrices:
> A<-matrix(c(1.0,0.0,-0.2, -0.5,1.0,0.0, -0.5,-0.8,1.0), 3, 3, byrow=TRUE)
> B<-c(0.5,0.0,0.0)
> # Solve for the local throughputs (L):
> L<-solve(A,B)
> # Use L matrix to calculate visit ratios at each router
> v<-c(L[1]/arate, L[2]/arate, L[3]/arate)
> # Service demands at each node:
> sd<-c(v[1]*stime[1], v[2]*stime[2], v[3]*stime[3])
> #
> # Set up PDQ-R model of Jackson network
> #--------------------------------------
> library(pdq)
> Init("Jackson Network in PDQ-R")
NULL
> wname<-c("Traffic")
> rname<-c("Router1", "Router2", "Router3")
> # Create the traffic arriving into the network
> CreateOpen(wname, arate)
[1] 1
> SetWUnit("Msg")
NULL
> SetTUnit("Sec")
NULL
> # Create network routers
> for(i in 1:length(rname)) {
+ 	CreateNode(rname[i], CEN, FCFS)
+ 	SetDemand(rname[i], wname, sd[i])
+ }
> Solve(CANON)
NULL
> Report()
                ***************************************
                ****** Pretty Damn Quick REPORT *******
                ***************************************
                ***  of : Sun Jan 19 13:25:11 2014  ***
                ***  for: Jackson Network in PDQ-R  ***
                ***  Ver: PDQ Analyzer 6.0 121512   ***
                ***************************************
                ***************************************

                =======================================
                ******    PDQ Model INPUTS      *******
                =======================================

Node Sched Resource   Workload   Class     Demand
---- ----- --------   --------   -----     ------
CEN  FCFS  Router1    Traffic    TRANS     1.2195
CEN  FCFS  Router2    Traffic    TRANS     1.2195
CEN  FCFS  Router3    Traffic    TRANS     1.0976

Queueing Circuit Totals:
        Streams:      1
        Nodes:        3

WORKLOAD Parameters:
Source        per Msg        Demand
------        -------        ------
Traffic        0.5000        3.5366


                =======================================
                ******   PDQ Model OUTPUTS      *******
                =======================================

Solution Method: CANON

                ******   SYSTEM Performance     *******

Metric                     Value    Unit
------                     -----    ----
Workload: "Traffic"
Number in system          4.3412    Msg
Mean throughput           0.5000    Msg/Sec
Response time             8.6824    Sec
Stretch factor            2.4550

Bounds Analysis:
Max throughput            0.8200    Msg/Sec
Min response              3.5366    Sec


                ******   RESOURCE Performance   *******

Metric          Resource     Work              Value   Unit
------          --------     ----              -----   ----
Throughput      Router1      Traffic          0.5000   Msg/Sec
Utilization     Router1      Traffic         60.9756   Percent
Queue length    Router1      Traffic          1.5625   Msg
Waiting line    Router1      Traffic          0.9527   Msg
Waiting time    Router1      Traffic          1.9055   Sec
Residence time  Router1      Traffic          3.1250   Sec

Throughput      Router2      Traffic          0.5000   Msg/Sec
Utilization     Router2      Traffic         60.9756   Percent
Queue length    Router2      Traffic          1.5625   Msg
Waiting line    Router2      Traffic          0.9527   Msg
Waiting time    Router2      Traffic          1.9055   Sec
Residence time  Router2      Traffic          3.1250   Sec

Throughput      Router3      Traffic          0.5000   Msg/Sec
Utilization     Router3      Traffic         54.8780   Percent
Queue length    Router3      Traffic          1.2162   Msg
Waiting line    Router3      Traffic          0.6674   Msg
Waiting time    Router3      Traffic          1.3349   Sec
Residence time  Router3      Traffic          2.4324   Sec


NULL
> print("Check traffic eqns:")
[1] "Check traffic eqns:"
> sprintf("L1: %f == %f: 0.5 + 0.2 L3\n", L[1], (0.5 + 0.2*L[3]), L[3])
[1] "L1: 0.609756 == 0.609756: 0.5 + 0.2 L3\n"
> sprintf("L2: %f == %f: 0.5 L1\n", L[2], (0.5*L[1]))
[1] "L2: 0.304878 == 0.304878: 0.5 L1\n"
> sprintf("L3: %f == %f: 0.5 L1 + 0.8 L2\n", L[3], (0.5*L[1] + 0.8*L[2]))
[1] "L3: 0.548780 == 0.548780: 0.5 L1 + 0.8 L2\n"
> 
> proc.time()
   user  system elapsed 
  0.480   0.027   0.489 
